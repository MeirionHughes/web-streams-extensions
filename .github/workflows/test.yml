name: Test and Coverage

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --enable-source-maps
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run tests with coverage
      if: matrix.node-version == '22.x'
      run: npm run test:cover


    - name: Upload coverage reports
      if: matrix.node-version == '22.x'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage/
          !coverage/tmp/

    - name: Coverage Comment on PR
      if: matrix.node-version == '22.x' && github.event_name == 'pull_request'
      uses: romeovs/lcov-reporter-action@v0.3.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        lcov-file: ./coverage/lcov.info

    - name: Upload coverage reports to Codecov
      if: matrix.node-version == '22.x'
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  coverage-badge:
    runs-on: ubuntu-latest
    needs: test
    if: |
      github.ref == 'refs/heads/master' && 
      github.event_name == 'push' && 
      needs.test.result == 'success'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm run test:cover

    - name: Generate coverage badge
      run: npx coverage-badges-cli --source coverage/coverage-summary.json --output coverage/badges.svg

    - name: Upload coverage badge
      uses: actions/upload-artifact@v4
      with:
        name: coverage-badge
        path: coverage/badges.svg
