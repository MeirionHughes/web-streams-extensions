name: Tests

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: --enable-source-maps
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        echo "=== Installed package versions ==="
        npm list mocha c8 @types/mocha --depth=0

    - name: Run Node.js tests
      run: npm run test:node

  browser-test-chromium:
    runs-on: ubuntu-latest
    name: Browser Tests (Chromium)
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Get Playwright version
      id: playwright-version
      run: echo "version=$(npm list @web/test-runner-playwright --depth=0 --json | jq -r '.dependencies["@web/test-runner-playwright"].version')" >> $GITHUB_OUTPUT

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-chromium

    - name: Install Chromium system dependencies
      run: npx playwright install-deps chromium

    - name: Install Playwright Chromium
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install chromium

    - name: Run Chromium browser tests
      run: npm run test:browser:chromium

  browser-test-firefox:
    runs-on: ubuntu-latest
    name: Browser Tests (Firefox)
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Get Playwright version
      id: playwright-version
      run: echo "version=$(npm list @web/test-runner-playwright --depth=0 --json | jq -r '.dependencies["@web/test-runner-playwright"].version')" >> $GITHUB_OUTPUT

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-firefox

    - name: Install Firefox system dependencies
      run: npx playwright install-deps firefox

    - name: Install Playwright Firefox
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install firefox

    - name: Run Firefox browser tests
      run: npm run test:browser:firefox

  browser-test-webkit:
    runs-on: ubuntu-latest
    name: Browser Tests (WebKit)
    needs: test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Get Playwright version
      id: playwright-version
      run: echo "version=$(npm list @web/test-runner-playwright --depth=0 --json | jq -r '.dependencies["@web/test-runner-playwright"].version')" >> $GITHUB_OUTPUT

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      id: playwright-cache
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ steps.playwright-version.outputs.version }}-webkit

    - name: Install WebKit system dependencies
      run: npx playwright install-deps webkit

    - name: Install Playwright WebKit
      if: steps.playwright-cache.outputs.cache-hit != 'true'
      run: npx playwright install webkit

    - name: Run WebKit browser tests
      run: npm run test:browser:webkit

  coverage:
    runs-on: ubuntu-latest
    name: Coverage
    needs: [test, browser-test-chromium, browser-test-firefox, browser-test-webkit]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm run test:node:cover

    - name: Verify coverage file exists
      run: |
        ls -la ./coverage/
        if [ -f ./coverage/lcov.info ]; then
          echo "Coverage file found"
          head -5 ./coverage/lcov.info
        else
          echo "Coverage file not found!"
          exit 1
        fi

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
